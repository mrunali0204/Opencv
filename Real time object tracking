import cv2

# Initialize the webcam
cap = cv2.VideoCapture(0)

# Check if webcam opened successfully
if not cap.isOpened():
    print("Error: Could not open webcam.")
    exit()

# Read the first frame from the webcam
ret, frame = cap.read()

if not ret:
    print("Error: Could not read frame.")
    exit()

# Select the bounding box of the object to track
bbox = cv2.selectROI("Frame", frame, fromCenter=False, showCrosshair=True)

# Create a tracker object
tracker = cv2.TrackerCSRT_create()  # You can use different trackers like KCF, MIL, TLD, etc.

# Initialize the tracker with the first frame and the bounding box
tracker.init(frame, bbox)

while True:
    # Read a new frame from the webcam
    ret, frame = cap.read()

    if not ret:
        print("Error: Could not read frame.")
        break

    # Update the tracker
    success, bbox = tracker.update(frame)

    if success:
        # Tracking success, draw the bounding box
        p1 = (int(bbox[0]), int(bbox[1]))
        p2 = (int(bbox[0] + bbox[2]), int(bbox[1] + bbox[3]))
        cv2.rectangle(frame, p1, p2, (255, 0, 0), 2, 1)
    else:
        # Tracking failure, display a message
        cv2.putText(frame, "Tracking failure detected", (100, 80), cv2.FONT_HERSHEY_SIMPLEX, 0.75, (0, 0, 255), 2)

    # Display the frame
    cv2.imshow("Frame", frame)

    # Exit if the user presses the 'q' key
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the webcam and close all OpenCV windows
cap.release()
cv2.destroyAllWindows()
